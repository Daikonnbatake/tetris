/***********************************************************************
 *
 * 　どの方向からどの方向へ回転したかを保持するクラス.
 *
***********************************************************************/

class RotateDiff
{
    #nowAngle;     // number:                 現在の回転情報.
    #oldAngle;     // number:                 1つ前の回転情報.
    static #table; // Object<number, string>: 文字列に変換するための表.


    /*-----------------------------------------------------------------+
    *
    * 説明: コンストラクタ.
    *
    +-----------------------------------------------------------------*/
    constructor()
    {
        this.#nowAngle = 0;
        this.#oldAngle = 3;
        RotateDiff.#table =
        {
            0: 'N',
            1: 'E',
            2: 'S',
            3: 'W',
        }
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: 左に 90 度回転する.
    *
    +-----------------------------------------------------------------*/
    TurnLeft()
    {
        this.#oldAngle = this.#nowAngle;
        this.#nowAngle = (this.#nowAngle + 3) % 4;
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: 右に 90 度回転する.
    *
    +-----------------------------------------------------------------*/
    TurnRight()
    {
        this.#oldAngle = this.#nowAngle;
        this.#nowAngle = (this.#nowAngle + 1) % 4;
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: 角度の差を文字列として取得する.
    *
    * 戻り値:
    *   string: 角度の差を表す文字列.
    *
    +-----------------------------------------------------------------*/
    ToString()
    {
        let old = RotateDiff.#table[this.#oldAngle];
        let now = RotateDiff.#table[this.#nowAngle];
        return old + 'to' + now;
    }
}