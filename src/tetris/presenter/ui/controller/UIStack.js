/***********************************************************************
 *
 *  UI の階層を管理するクラス.
 *
***********************************************************************/

class UIStack
{
    #stack; // Array<UIElement>: UI要素のStack.


    /*-----------------------------------------------------------------+
    *
    * 説明: コンストラクタ.
    *
    * 引数:
    *   UIElement rootItem: UIのroot要素.
    *
    +-----------------------------------------------------------------*/
    constructor(rootItem)
    {
        this.#stack = new Array();
        this.#stack.push(rootItem);
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: 次の層のUIに潜る.
    *
    +-----------------------------------------------------------------*/
    Dive()
    {
        const lastIndex = this.#stack.length - 1;
        const lastItem  = this.#stack[lastIndex];
        const nextItem  = lastItem.GetRelation().GetChild();
        if (nextItem === null) return;

        this.#stack.push(nextItem);
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: 前の層のUIに浮上する.
    *
    +-----------------------------------------------------------------*/
    Levitate()
    {
        this.#stack.pop();
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: 最後の要素を入れ替える.
    *
    +-----------------------------------------------------------------*/
    SwapLastItem(value)
    {
        this.#stack.pop();
        this.#stack.push(value);
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: 現在の操作対象を取得する.
    *
    * 戻り値:
    *   UIElement: 現在の操作対象.
    *
    +-----------------------------------------------------------------*/
    GetCurrent()
    {
        const lastIndex = this.#stack.length - 1;
        return this.#stack[lastIndex];
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: Stack が空なら true を返す.
    *
    * 戻り値:
    *   bool: Stack が空なら true.
    *
    +-----------------------------------------------------------------*/
    IsEmpty()
    {
        return this.#stack.length === 0;
    }
}