/***********************************************************************
 *
 *   角度を表すクラス.
 *
***********************************************************************/

class Angle
{
    #radian; // number: ラジアン
    #degree; // number: 度


    /*-----------------------------------------------------------------+
    *
    * 説明: コンストラクタ.
    *
    * 引数:
    *   number degree: 角度.
    *
    +-----------------------------------------------------------------*/
    constructor(degree)
    {
        this.SetDegree(degree);
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: ラジアンを取得する.
    *
    * 戻り値:
    *   number: ラジアン.
    *
    +-----------------------------------------------------------------*/
    GetRadian()
    {
        return this.#radian;
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: 角度を取得する.
    *
    * 戻り値:
    *   number: 角度.
    *
    +-----------------------------------------------------------------*/
    GetDegree()
    {
        return this.#degree;
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: ラジアンを使って値を設定する.
    *
    * 引数:
    *   number radian: ラジアン.
    *
    +-----------------------------------------------------------------*/
    SetRadian(radian)
    {
        this.#radian = radian;
        this.#degree = Angle.ToDegree(radian);
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: 角度を使って値を設定する.
    *
    * 引数:
    *   number degree: 角度.
    *
    +-----------------------------------------------------------------*/
    SetDegree(degree)
    {
        this.#degree = degree;
        this.#radian = Angle.ToRadian(degree);
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: 角度をラジアンに変換する.
    *
    * 引数:
    *   number degree: 角度.
    *
    * 戻り値:
    *   number: ラジアン.
    *
    +-----------------------------------------------------------------*/
    static ToRadian(degree)
    {
        return degree * (Math.PI / 180);
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: ラジアンを角度に変換する.
    *
    * 引数:
    *   number radian: ラジアン.
    *
    * 戻り値:
    *   number: 角度.
    *
    +-----------------------------------------------------------------*/
    static ToDegree(radian)
    {
        return radian * (180 / Math.PI);
    }
}