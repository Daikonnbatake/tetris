/***********************************************************************
 *
 * 　メッセージを送受信するためのクラス.
 *
 * 　メモ: ワンちゃんいらんかったら消す.
 *
***********************************************************************/

class Channel
{
    #subscribers; // Set<callback>: 購読者を格納する集合.


    /*-----------------------------------------------------------------+
    *
    * 説明: コンストラクタ.
    *
    +-----------------------------------------------------------------*/
    constructor()
    {
        this.#subscribers = new Set();
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: メッセージを送信する.
    *
    * 引数:
    *   any  message:  メッセージ.
    *
    +-----------------------------------------------------------------*/
    Publish(message)
    {
        for (const subscriber of this.#subscribers)
        {
            subscriber(message);
        }
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: このチャンネルを購読する.
    *
    * 引数:
    *   any  callback:  コールバック関数.
    *
    +-----------------------------------------------------------------*/
    Subscribe(callback)
    {
        this.#subscribers.add(callback);
    }


    /*-----------------------------------------------------------------+
    *
    * 説明: このチャンネルの購読をやめる.
    *
    * 引数:
    *   any  callback:  コールバック関数.
    *
    +-----------------------------------------------------------------*/
    UnSubscribe(callback)
    {
        this.#subscribers.delete(callback);
    }
}